{"ast":null,"code":"var _jsxFileName = \"/home/alind/Downloads/React_Sending_http-requests/01-starting-project/src/App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  async function fetchMoviesHandler() {\n    seterror(null);\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('https://swapi.dev/api/film/');\n\n      if (!response.ok) {\n        throw new Error('something went wrong');\n      }\n\n      const data = await response.json();\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 8\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, !isLoading && movies.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 40\n    }\n  }), !isLoading && movies.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 42\n    }\n  }, \"No Movies\"), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Loading....\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/alind/Downloads/React_Sending_http-requests/01-starting-project/src/App.js"],"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","seterror","response","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;AAEC,iBAAeS,kBAAf,GAAoC;AACnCC,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAG;AACD,YAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B;;AACA,UAAG,CAACD,QAAQ,CAACE,EAAb,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEG,YAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;AACxD,eAAO;AACLC,UAAAA,EAAE,EAAED,SAAS,CAACE,UADT;AAELC,UAAAA,KAAK,EAAEH,SAAS,CAACG,KAFZ;AAGLC,UAAAA,WAAW,EAAEJ,SAAS,CAACK,aAHlB;AAILC,UAAAA,WAAW,EAAEN,SAAS,CAACO;AAJlB,SAAP;AAMD,OAPyB,CAA1B;AAQAvB,MAAAA,SAAS,CAACa,iBAAD,CAAT;AACAX,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACJ,KAjBD,CAiBE,OAAMC,KAAN,EAAY;AACZC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AAEF;;AAED,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAQ,IAAA,OAAO,EAAEE,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,CAACJ,SAAD,IAAcF,MAAM,CAACyB,MAAP,GAAc,CAA5B,iBAAgC,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEzB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjC,EAEC,CAACE,SAAD,IAAaF,MAAM,CAACyB,MAAP,KAAgB,CAA7B,iBAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFnC,EAGCvB,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHd,CALF,CADF;AAaD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading]=useState(false);\n  const [error, setError] = useState(null);\n\n   async function fetchMoviesHandler() {\n    seterror(null);\n    setIsLoading(true);\n    try{\n      const response = await fetch('https://swapi.dev/api/film/')\n      if(!response.ok){\n        throw new Error('something went wrong');\n      }\n      const data = await response.json();\n \n         const transformedMovies = data.results.map((movieData) => {\n           return {\n             id: movieData.episode_id,\n             title: movieData.title,\n             openingText: movieData.opening_crawl,\n             releaseDate: movieData.release_date,\n           };\n         });\n         setMovies(transformedMovies);\n         setIsLoading(false);\n    } catch(error){\n      setError(error);\n    }\n   \n  }\n\n  return (\n    <React.Fragment>\n      <section>\n       <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n       \n      </section>\n      <section>\n      {!isLoading && movies.length>0&& <MoviesList movies={movies} />}\n      {!isLoading&& movies.length===0 && <p>No Movies</p>}\n      {isLoading && <p>Loading....</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}